@page "/notebook"

@using BlazorApp.Shared.Data
@* @using MudblazorDemo.CRUD.Data
@inject MudblazorDemo.CRUD.Services.ICustomerService customerService *@
@inject MudBlazor.ISnackbar snackBar

<MudPaper Class="pa-16 ma-2" Elevation="0">
    <MudPaper>
        <MudCard Elevation="25">
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h6">Add / Edit Question & Answer</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudTextField @bind-Value="question.Title" Label="First Name" Variant="Variant.Text" Margin="Margin.Normal"></MudTextField>
                <MudTextField @bind-Value="question.AnswerData.Value" Label="Last Name" Variant="Variant.Text" Margin="Margin.Normal"></MudTextField>
                <MudTextField @bind-Value="question.AnswerData.Reference" Label="Phone Number" Variant="Variant.Text" Margin="Margin.Normal"></MudTextField>
                <br />
                <MudButton Variant="Variant.Filled" Color="Color.Success" OnClick="Save">Save Customer</MudButton>
            </MudCardContent>
        </MudCard>
        <br />
        <MudTable Elevation="25" Items="GetQuestions()" Filter="new Func<Question, bool>(Search)" @bind-customer="question">
            <ToolBarContent>
                <MudText Typo="Typo.h6">Question</MudText>
                <MudToolBarSpacer />
                <MudTextField @bind-Value="searchString" Placeholder="Search for Questions..." Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
            </ToolBarContent>
            <HeaderContent>
                <MudTh>Question</MudTh>
                <MudTh>Answer</MudTh>
                <MudTh>Reference</MudTh>
                <MudTh>Actions</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Id">@context.Id</MudTd>
                <MudTd DataLabel="FirstName">@context.Title</MudTd>
                <MudTd DataLabel="LastName">@context.AnswerData.Value</MudTd>
                <MudTd DataLabel="PhoneNumber">@context.AnswerData.Reference</MudTd>
                <MudTd DataLabel="">
                    <MudFab @onclick="@(()=>Edit(@context.Id))" Color="Color.Primary" Icon="@Icons.Material.Filled.Edit" Size="Size.Small" IconSize="Size.Small" />
                    <MudFab @onclick="@(()=>Delete(@context.Id))" Color="Color.Secondary" Icon="@Icons.Material.Filled.Delete" Size="Size.Small" IconSize="Size.Small" />
                </MudTd>
            </RowTemplate>
        </MudTable>
    </MudPaper>
</MudPaper>
@code {
    private string searchString = "";
    private Question question = new Question();
    private List<Question> questions = new List<Question>();
    protected override async Task OnInitializedAsync()
    {
        GetQuestions();
    }
    private List<Question> GetQuestions()
    {
        if (questions.Count == 0)
        {
            Question obj = new Question();
            obj.Title = "What is C#?";
            obj.AnswerData = new Answer();
            obj.AnswerData.Value = "C# is a programming language develop by microsoft.";
            obj.AnswerData.Reference = "https://learn.microsoft.com/en-us/dotnet/csharp/";
            questions.Add(obj);
        }

        // customers = customerService.GetCustomers();
        return questions;
    }
    private bool Search(Question customer)
    {
        if (string.IsNullOrWhiteSpace(searchString)) return true;
        if (customer.Title.Contains(searchString, StringComparison.OrdinalIgnoreCase)
            || customer.AnswerData.Value.Contains(searchString, StringComparison.OrdinalIgnoreCase)
            || customer.AnswerData.Reference.Contains(searchString, StringComparison.OrdinalIgnoreCase))
        {
            return true;
        }
        return false;
    }
    private void Save()
    {
        // customerService.SaveCustomer(customer);
        question = new Question();
        snackBar.Add("Customer Saved.", Severity.Success);
        GetQuestions();
    }
    private void Edit(int id)
    {
        question = questions.FirstOrDefault(c => c.Id == id);
    }
    private void Delete(int id)
    {
        // customerService.DeleteCustomer(id);
        snackBar.Add("Customer Deleted.", Severity.Success);
        GetQuestions();
    }
}